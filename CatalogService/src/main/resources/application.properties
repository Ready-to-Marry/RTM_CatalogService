server.port = 8086
eureka.client.enabled=true
spring.servlet.multipart.enabled=true
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.mvc.contentnegotiation.favor-parameter=true
spring.mvc.contentnegotiation.parameter-name=format
spring.mvc.contentnegotiation.media-types.json=application/json

# DB connect
spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# Hibernate
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# AWS
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY_ID}
cloud.aws.credentials.secret-key=${AWS_SECRET_ACCESS_KEY}
cloud.aws.region.static=${AWS_REGION}
cloud.aws.stack.auto=false
cloud.aws.s3.bucket=${AWS_S3_BUCKET_NAME}

#/actuator/health
management.endpoints.web.exposure.include=health

# Eureka
spring.application.name=catalog-service
eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE}
eureka.client.register-with-eureka=${EUREKA_CLIENT_REGISTER_WITH_EUREKA}
eureka.client.fetch-registry=${EUREKA_CLIENT_FETCH_REGISTRY}
eureka.instance.prefer-ip-address=${EUREKA_INSTANCE_PREFER_IP_ADDRESS}

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS}
spring.kafka.consumer.group-id=group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer